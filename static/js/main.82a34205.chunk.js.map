{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/HighlightedQuote.module.css","components/UI/Card.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/Comments.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/UI/LoadingSpinner.js","components/quotes/NoQuotesFound.js","hooks/use-http.js","lib/api.js","pages/AllQuotes.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js","pages/NotFound.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/layout/MainNavigation.js","components/layout/Layout.js","App.js","index.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","navigate","useNavigate","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","indexOf","sorting","onClick","pathname","list","map","quote","LoadingSpinner","spinner","NoQuotesFound","noquotes","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","AllQuotes","loadedQuotes","useEffect","length","HighlightedQuote","QuoteDetail","useParams","Card","card","children","QuoteForm","authorInputRef","useRef","textInputRef","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","isLoading","loading","control","htmlFor","ref","rows","actions","NewQuote","newQuote","NotFound","NewCommentForm","onAddedComment","commentTextRef","submitFormHandler","CommentItem","CommentsList","comments","comment","Comments","useState","isAddingComment","setIsAddingComment","loadedComments","addedCommentHandler","MainNavigation","header","logo","nav","navData","isActive","active","Layout","main","App","path","element","ReactDOM","createRoot","document","getElementById","render"],"mappings":"gHACAA,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,gBCArID,EAAOC,QAAU,CAAC,OAAS,+BAA+B,KAAO,6BAA6B,IAAM,4BAA4B,OAAS,iC,iBCAzID,EAAOC,QAAU,CAAC,KAAO,6BAA6B,QAAU,gCAAgC,QAAU,gCAAgC,QAAU,kC,iBCApJD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,kBCA3DD,EAAOC,QAAU,CAAC,KAAO,0B,gBCAzBD,EAAOC,QAAU,CAAC,QAAU,kC,gBCA5BD,EAAOC,QAAU,CAAC,SAAW,kC,gBCA7BD,EAAOC,QAAU,CAAC,MAAQ,kC,gBCA1BD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,KAAO,4B,gBCAzBD,EAAOC,QAAU,CAAC,SAAW,iC,gBCA7BD,EAAOC,QAAU,CAAC,SAAW,6B,gBCA7BD,EAAOC,QAAU,CAAC,KAAO,uB,yICmBVC,EAhBG,SAACC,GACjB,OACE,qBAAIC,UAAWC,IAAQC,KAAvB,UACE,mCACE,qCACE,4BAAIH,EAAMI,SAEZ,qCAAaJ,EAAMK,YAErB,cAAC,IAAD,CAAMC,GAAE,gCAA2BN,EAAMO,IAAMN,UAAU,MAAzD,iC,iBCyCSO,EArCG,SAACR,GACjB,IAZkBS,EAAQC,EAYpBC,EAAWC,cACXC,EAAWC,cAIXC,EAAiD,QAFnC,IAAIC,gBAAgBH,EAASI,QAEVC,IAAI,QAErCC,GAnBYV,EAmBcT,EAAMS,OAnBZC,EAmBoBK,EAjBvCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKD,EAAOc,QAAQF,GAAUZ,EAAOc,QAAQD,GAAU,GAAK,EAEvDb,EAAOc,QAAQF,GAAUZ,EAAOc,QAAQD,GAAU,GAAK,MAqBlE,OACE,eAAC,WAAD,WACE,qBAAKrB,UAAWC,IAAQsB,QAAxB,SACE,yBAAQC,QATe,WAC3Bd,EAASE,EAASa,SAAU,CAC1BT,OAAO,SAAD,OAAWF,EAAqB,OAAS,UAO7C,kBACQA,EAAqB,aAAe,iBAG9C,oBAAId,UAAWC,IAAQyB,KAAvB,SACGR,EAAaS,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAEEtB,GAAIsB,EAAMtB,GACVF,OAAQwB,EAAMxB,OACdD,KAAMyB,EAAMzB,MAHPyB,EAAMtB,a,iBCrCRuB,EAJQ,WACrB,OAAO,qBAAK7B,UAAWC,IAAQ6B,W,iBCWlBC,EAXO,WACpB,OACE,sBAAK/B,UAAWC,IAAQ+B,SAAxB,UACE,iDACA,cAAC,IAAD,CAAM3B,GAAI,2BAA4BL,UAAU,MAAhD,6B,qCCLN,SAASiC,EAAYC,EAAOC,GAC1B,MAAoB,SAAhBA,EAAOC,KACF,CACLC,KAAM,KACNC,MAAO,KACPC,OAAQ,WAIQ,YAAhBJ,EAAOC,KACF,CACLC,KAAMF,EAAOK,aACbF,MAAO,KACPC,OAAQ,aAIQ,UAAhBJ,EAAOC,KACF,CACLC,KAAM,KACNC,MAAOH,EAAOM,aACdF,OAAQ,aAILL,EAgCMQ,MA7Bf,SAAiBC,GAA4C,IAA3BC,EAA0B,wDAC1D,EAA8BC,qBAAWZ,EAAa,CACpDM,OAAQK,EAAmB,UAAY,KACvCP,KAAM,KACNC,MAAO,OAHT,mBAAOQ,EAAP,KAAkBC,EAAlB,KAMMC,EAAcC,sBAAW,uCAC7B,WAAgBC,GAAhB,eAAAC,EAAA,6DACEJ,EAAS,CAAEX,KAAM,SADnB,kBAG+BO,EAAgBO,GAH/C,OAGUV,EAHV,OAIIO,EAAS,CAAEX,KAAM,UAAWI,iBAJhC,gDAMIO,EAAS,CACPX,KAAM,QACNK,aAAc,KAAMW,SAAW,0BARrC,yDAD6B,sDAa7B,CAACT,IAGH,OAAO,aACLK,eACGF,ICvDDO,EAAkB,oDAEjB,SAAeC,IAAtB,+B,4CAAO,oCAAAH,EAAA,sEACkBI,MAAM,GAAD,OAAIF,EAAJ,iBADvB,cACCG,EADD,gBAEcA,EAASC,OAFvB,UAECpB,EAFD,OAIAmB,EAASE,GAJT,sBAKG,IAAIC,MAAMtB,EAAKe,SAAW,2BAL7B,OAUL,IAAWQ,KAFLC,EAAoB,GAERxB,EACVyB,EADgB,aAEpBxD,GAAIsD,GACDvB,EAAKuB,IAGVC,EAAkBE,KAAKD,GAhBpB,yBAmBED,GAnBF,6C,sBAsBA,SAAeG,EAAtB,kC,4CAAO,WAA8BC,GAA9B,mBAAAd,EAAA,sEACkBI,MAAM,GAAD,OAAIF,EAAJ,mBAA8BY,EAA9B,UADvB,cACCT,EADD,gBAEcA,EAASC,OAFvB,UAECpB,EAFD,OAIAmB,EAASE,GAJT,sBAKG,IAAIC,MAAMtB,EAAKe,SAAW,0BAL7B,cAQCc,EARD,aASH5D,GAAI2D,GACD5B,GAVA,kBAaE6B,GAbF,6C,sBAgBA,SAAeC,EAAtB,kC,4CAAO,WAAwBC,GAAxB,iBAAAjB,EAAA,sEACkBI,MAAM,GAAD,OAAIF,EAAJ,gBAAmC,CAC7DgB,OAAQ,OACRC,KAAMC,KAAKC,UAAUJ,GACrBK,QAAS,CACP,eAAgB,sBALf,cACCjB,EADD,gBAQcA,EAASC,OARvB,UAQCpB,EARD,OAUAmB,EAASE,GAVT,sBAWG,IAAIC,MAAMtB,EAAKe,SAAW,2BAX7B,gCAcE,MAdF,4C,sBAiBA,SAAesB,EAAtB,kC,4CAAO,WAA0BxB,GAA1B,iBAAAC,EAAA,sEACkBI,MAAM,GAAD,OAAIF,EAAJ,qBAAgCH,EAAYe,QAA5C,SAA4D,CACtFI,OAAQ,OACRC,KAAMC,KAAKC,UAAUtB,EAAYyB,aACjCF,QAAS,CACP,eAAgB,sBALf,cACCjB,EADD,gBAQcA,EAASC,OARvB,UAQCpB,EARD,OAUAmB,EAASE,GAVT,sBAWG,IAAIC,MAAMtB,EAAKe,SAAW,0BAX7B,gCAcE,CAAEwB,UAAWvC,EAAKwC,OAdpB,4C,sBAiBA,SAAeC,EAAtB,kC,4CAAO,WAA8Bb,GAA9B,uBAAAd,EAAA,sEACkBI,MAAM,GAAD,OAAIF,EAAJ,qBAAgCY,EAAhC,UADvB,cACCT,EADD,gBAGcA,EAASC,OAHvB,UAGCpB,EAHD,OAKAmB,EAASE,GALT,sBAMG,IAAIC,MAAMtB,EAAKe,SAAW,2BAN7B,OAWL,IAAWQ,KAFLmB,EAAsB,GAEV1C,EACV2C,EADgB,aAEpB1E,GAAIsD,GACDvB,EAAKuB,IAGVmB,EAAoBhB,KAAKiB,GAjBtB,yBAoBED,GApBF,6C,sBCpCQE,MA9Bf,WACE,MAKIvC,EAAQY,GAAc,GAJxBN,EADF,EACEA,YACAT,EAFF,EAEEA,OACM2C,EAHR,EAGE7C,KACAC,EAJF,EAIEA,MAOF,OAJA6C,qBAAU,WACRnC,MACC,CAACA,IAEW,YAAXT,EAEA,qBAAKvC,UAAU,WAAf,SACE,cAAC,EAAD,MAIFsC,EACK,mBAAGtC,UAAU,WAAb,SAAyBsC,IAEnB,cAAXC,GAA4B2C,GAAwC,IAAxBA,EAAaE,OAG9C,cAAX7C,EACK,cAAC,EAAD,CAAW/B,OAAQ0E,SAD5B,EAFS,cAAC,EAAD,K,iBCpBIG,EATU,SAACtF,GACxB,OACE,yBAAQC,UAAWC,IAAQ2B,MAA3B,UACE,4BAAI7B,EAAMI,OACV,qCAAaJ,EAAMK,aCwCVkF,EAtCK,WAClB,IAEQrB,EAFOsB,cAEPtB,QAER,EAA0DvB,EACxDsB,GACA,GAFMhB,EAAR,EAAQA,YAAaT,EAArB,EAAqBA,OAAc2B,EAAnC,EAA6B7B,KAAmBC,EAAhD,EAAgDA,MAShD,OAJA6C,qBAAU,WACRnC,EAAYiB,KACX,CAACjB,EAAaiB,IAEF,YAAX1B,EAEA,qBAAKvC,UAAU,WAAf,SACE,cAAC,EAAD,MAKFsC,EACK,mBAAGtC,UAAU,WAAb,SAAyBsC,IAG7B4B,EAAY/D,KAKf,eAAC,WAAD,WACE,cAAC,EAAD,CAAkBA,KAAM+D,EAAY/D,KAAMC,OAAQ8D,EAAY9D,SAC9D,cAAC,IAAD,OANK,iD,yBC7BIoF,EAJF,SAACzF,GACZ,OAAO,qBAAKC,UAAWC,IAAQwF,KAAxB,SAA+B1F,EAAM2F,Y,gBCyE/BC,EApEG,SAAC5F,GACjB,IAAM6F,EAAiBC,mBACjBC,EAAeD,mBAwBrB,OACE,cAAC,WAAD,UAQE,cAAC,EAAD,UACE,uBAEE7F,UAAWC,IAAQ8F,KACnBC,SAjCR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBP,EAAeQ,QAAQC,MACvCC,EAAcR,EAAaM,QAAQC,MAKzCtG,EAAMwG,WAAW,CAAEnG,OAAQ+F,EAAehG,KAAMmG,KAqB5C,UAKGvG,EAAMyG,WACL,qBAAKxG,UAAWC,IAAQwG,QAAxB,SACE,cAAC,EAAD,MAIJ,sBAAKzG,UAAWC,IAAQyG,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOvE,KAAK,OAAO9B,GAAG,SAASsG,IAAKhB,OAEtC,sBAAK5F,UAAWC,IAAQyG,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUrG,GAAG,OAAOuG,KAAK,IAAID,IAAKd,OAEpC,qBAAK9F,UAAWC,IAAQ6G,QAAxB,SACE,wBAEA9G,UAAU,MAFV,iCChCG+G,MAxBf,WACE,MAA8BrE,EAAQyB,GAA/BnB,EAAP,EAAOA,YAAaT,EAApB,EAAoBA,OAEd7B,EAAWC,cAgBjB,OAdAwE,qBAAU,WACO,cAAX5C,GACF7B,EAAS,aAIX,CAAC6B,EAAO7B,IASR,cAAC,EAAD,CAAW8F,UAAsB,YAAXjE,EAAsBgE,WAPtB,SAACS,GACvBhE,EAAYgE,OCVDC,MATf,WAEE,OACE,qBAAKjH,UAAU,WAAf,SACI,oD,kBC4COkH,GA1CQ,SAACnH,GACtB,MAAuC2C,EAAQgC,GAAvC1B,EAAR,EAAQA,YAAaT,EAArB,EAAqBA,OAAQD,EAA7B,EAA6BA,MACtB6E,EAAkBpH,EAAlBoH,eAEDC,EAAiBvB,mBAGvBV,qBAAU,WACM,cAAX5C,GAA2BD,GAC5B6E,MAEF,CAAC5E,EAAQD,EAAO6E,IAGlB,IAAME,EAAoB,SAACpB,GACzBA,EAAMC,iBAKN,IAAMI,EAAcc,EAAehB,QAAQC,MAC3CrD,EAAY,CAAC2B,YAAa,CAACxE,KAAMmG,GAAcrC,QAASlE,EAAMkE,WAGhE,OACE,uBAAMjE,UAAWC,KAAQ8F,KAAMC,SAAUqB,EAAzC,UACc,YAAX9E,GACC,qBAAKvC,UAAU,WAAf,SACE,cAAC,EAAD,MAGJ,sBAAKA,UAAWC,KAAQyG,QAASV,SAAUqB,EAA3C,UACE,uBAAOV,QAAQ,UAAf,0BACA,0BAAUrG,GAAG,UAAUuG,KAAK,IAAID,IAAKQ,OAEvC,qBAAKpH,UAAWC,KAAQ6G,QAAxB,SACE,wBAAQ9G,UAAU,MAAlB,+B,oBCnCOsH,GARK,SAACvH,GACnB,OACE,oBAAIC,UAAWC,KAAQC,KAAvB,SACE,4BAAIH,EAAMI,U,oBCQDoH,GAVM,SAACxH,GACpB,OACE,oBAAIC,UAAWC,KAAQuH,SAAvB,SACGzH,EAAMyH,SAAS7F,KAAI,SAAC8F,GAAD,OAClB,cAAC,GAAD,CAA8BtH,KAAMsH,EAAQtH,MAA1BsH,EAAQnH,U,oBCuEnBoH,GAlEE,WACf,MAA8CC,oBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KAEA,EAIInF,EAAQoC,GAAgB,GAH1B9B,EADF,EACEA,YACAT,EAFF,EAEEA,OACMuF,EAHR,EAGEzF,KAIM4B,EADOsB,cACPtB,QAERkB,qBAAU,WACRnC,EAAYiB,KACX,CAACjB,EAAaiB,IAEjB,IAQIuD,EAJEO,EAAsB9E,uBAAY,WACtCD,EAAYiB,KACZ,CAACjB,EAAaiB,IAyBhB,MArBe,YAAX1B,IACFiF,EACE,sBAAKxH,UAAU,WAAf,UACE,cAAC,EAAD,IADF,QAKW,cAAXuC,IAA2BuF,GAAkBA,EAAe1C,OAAS,KACvEoC,EAAW,cAAC,GAAD,CAAcA,SAAUM,KAGxB,cAAXvF,GACEuF,GAA4C,IAA1BA,EAAe1C,SAEnCoC,EACE,qBAAKxH,UAAU,WAAf,SACE,oDAMJ,0BAASA,UAAWC,KAAQuH,SAA5B,UACE,gDACEI,GACA,wBAAQ5H,UAAU,MAAMwB,QAnCC,WAC7BqG,GAAmB,IAkCf,2BAIDD,GACC,cAAC,GAAD,CACE3D,QAASA,EACTkD,eAAgBY,IAGnBP,M,oBCtCQQ,OA9Bf,WACE,OACE,yBAAQhI,UAAWC,KAAQgI,OAA3B,UACE,qBAAKjI,UAAWC,KAAQiI,KAAxB,SACE,cAAC,IAAD,CAAS7H,GAAG,wBAAZ,4BAEF,qBAAKL,UAAWC,KAAQkI,IAAxB,SACE,+BACE,6BACE,cAAC,IAAD,CACE9H,GAAG,wBACHL,UAAW,SAACoI,GAAD,OAAcA,EAAQC,SAAWpI,KAAQqI,OAAS,IAF/D,0BAOF,6BACE,cAAC,IAAD,CACEjI,GAAG,2BACHL,UAAW,SAACoI,GAAD,OAAcA,EAAQC,SAAWpI,KAAQqI,OAAS,IAF/D,oC,oBCRGC,OATf,SAAgBxI,GACd,OACE,eAAC,WAAD,WACE,cAAC,GAAD,IACA,sBAAMC,UAAWC,KAAQuI,KAAzB,SAAgCzI,EAAM2F,eC0B7B+C,OA1Bf,WACE,OACE,cAAC,GAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,kBAAkBC,QAAS,cAAC,IAAD,CAAUtI,GAAG,4BACpD,cAAC,IAAD,CAAOqI,KAAK,wBAAwBC,QAAS,cAAC,EAAD,MAC7C,eAAC,IAAD,CAAOD,KAAK,iCAAiCC,QAAS,cAAC,EAAD,IAAtD,UACE,cAAC,IAAD,CACED,KAAK,GACLC,QACE,qBAAK3I,UAAU,WAAf,SACE,cAAC,IAAD,CAAMA,UAAU,YAAYK,GAAE,WAA9B,+BAMN,cAAC,IAAD,CAAOqI,KAAI,WAAcC,QAAS,cAAC,GAAD,SAEpC,cAAC,IAAD,CAAOD,KAAK,2BAA2BC,QAAS,cAAC,EAAD,MAChD,cAAC,IAAD,CAAOD,KAAK,mBAAmBC,QAAS,cAAC,EAAD,YCvBnCC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH,cAAC,IAAD,UACE,cAAC,GAAD,S","file":"static/js/main.82a34205.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3H4y0\",\"loading\":\"QuoteForm_loading__30-6u\",\"control\":\"QuoteForm_control__2nuZS\",\"actions\":\"QuoteForm_actions__3o3cY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__3fD3b\",\"logo\":\"MainNavigation_logo__1oPWp\",\"nav\":\"MainNavigation_nav__25BvD\",\"active\":\"MainNavigation_active__ztVjC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__1elHr\",\"loading\":\"NewCommentForm_loading__31Gs4\",\"control\":\"NewCommentForm_control__16tCL\",\"actions\":\"NewCommentForm_actions__1dOrC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__TRvXh\",\"sorting\":\"QuoteList_sorting__uShQl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2vBRS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Usv6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__wWN0g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__1UBVT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__Liz0I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__3kllh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__2YIY_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__3gwGz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__3fl_4\"};","import { Link } from \"react-router-dom\";\n\nimport classes from \"./QuoteItem.module.css\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={`/QuotesProject/quotes/${props.id}`} className=\"btn\">\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  \n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quotes.indexOf(quoteA) > quotes.indexOf(quoteB) ? 1 : -1;\n    } else {\n      return quotes.indexOf(quoteA) < quotes.indexOf(quoteB) ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    navigate(location.pathname, {\n      search: `?sort=${isSortingAscending ? \"desc\" : \"asc\"}`,\n    });\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import classes from './NoQuotesFound.module.css';\nimport { Link } from 'react-router-dom';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to={\"/QuotesProject/new-quote\"} className='btn'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://quotes-92381-default-rtdb.firebaseio.com/';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import React, { useEffect } from \"react\";\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\n\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\n\r\nfunction AllQuotes() {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuotes,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n  if (error) {\r\n    return <p className=\"centered\">{error}</p>;\r\n  }\r\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n    return <NoQuotesFound />;\r\n  }\r\n  if (status === \"completed\") {\r\n    return <QuoteList quotes={loadedQuotes} />;\r\n  }\r\n}\r\n\r\nexport default AllQuotes;\r\n","import classes from \"./HighlightedQuote.module.css\";\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment, useEffect } from 'react';\r\nimport { useParams, Outlet } from 'react-router-dom';\r\n\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getSingleQuote } from '../lib/api';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\n\r\nconst QuoteDetail = () => {\r\n  const params = useParams();\r\n\r\n  const { quoteId } = params;\r\n\r\n  const { sendRequest, status, data: loadedQuote, error } = useHttp(\r\n    getSingleQuote,\r\n    true\r\n  );\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n\r\n  if (status === 'pending') {\r\n    return (\r\n      <div className='centered'>\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className='centered'>{error}</p>;\r\n  }\r\n\r\n  if (!loadedQuote.text) {\r\n    return <p>No quote found!</p>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n      <Outlet />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef } from \"react\";\n// import { Prompt } from \"react-router-dom\";\nimport { Fragment } from \"react/cjs/react.production.min\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  // const [isFocused, setIsFocused] = useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    // setIsFocused(false);\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  // const formFocusedHandler = () => {\n  //   setIsFocused(true);\n  // };\n\n  // const finishFocusHandler = () => {\n  //   setIsFocused(false);\n  // };\n\n  return (\n    <Fragment>\n      {/* Prompt is currently not supported yet by v6 */}\n      {/* <Prompt\n        when={isFocused}\n        message={(location) =>\n          \"Are you sure you want to leave? All your entered data will be lost!\"\n        }\n      /> */}\n      <Card>\n        <form\n          // onFocus={formFocusedHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button \n            // onClick={finishFocusHandler} \n            className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import React,{useEffect} from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport QuoteForm from \"../components/quotes/QuoteForm\"\r\n\r\nimport useHttp from '../hooks/use-http'\r\nimport {addQuote} from '../lib/api'\r\n\r\nfunction NewQuote() {\r\n  const {sendRequest, status} = useHttp(addQuote)\r\n\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    if (status === 'completed') {\r\n      navigate('/quotes')\r\n    }\r\n    \r\n\r\n  },[status,navigate])\r\n\r\n  const addQuoteHandler = (newQuote) => {\r\n    sendRequest(newQuote)\r\n    //push method allows users to go back to previous page but replace does not.\r\n    // history.push('/quotes')\r\n  }\r\n\r\n  return (\r\n    <QuoteForm isLoading={status === \"pending\"} onAddQuote={addQuoteHandler} />\r\n  )\r\n}\r\n\r\nexport default NewQuote","import React from 'react'\r\n\r\n\r\nfunction NotFound() { \r\n\r\n  return (\r\n    <div className=\"centered\">\r\n        <h2>Page not found!</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotFound","import { useRef, useEffect } from \"react\";\n\nimport LoadingSpinner from \"../../components/UI/LoadingSpinner\";\n\nimport {  addComment } from \"../../lib/api\";\nimport useHttp from \"../../hooks/use-http\";\n\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const { sendRequest, status, error } = useHttp(addComment);\n  const {onAddedComment} = props\n\n  const commentTextRef = useRef();\n\n\n  useEffect(()=>{\n    if(status === \"completed\" && !error){\n      onAddedComment()\n    }\n  },[status, error, onAddedComment])\n\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    // send comment to server\n    const enteredText = commentTextRef.current.value\n    sendRequest({commentData: {text: enteredText}, quoteId: props.quoteId});\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\n\nimport NewCommentForm from \"./NewCommentForm\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\n\nimport classes from \"./Comments.module.css\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const {\n    sendRequest,\n    status,\n    data: loadedComments,\n  } = useHttp(getAllComments, true);\n\n  const params = useParams();\n  const { quoteId } = params;\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  },[sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />;\n      </div>\n    );\n  }\n  if (status === \"completed\" && (loadedComments || loadedComments.length > 0)) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = (\n      <div className=\"centered\">\n        <p>No comments yet!</p>\n      </div>\n    );\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport classes from \"./MainNavigation.module.css\";\r\n\r\nfunction MainNavigation() {\r\n  return (\r\n    <header className={classes.header}>\r\n      <div className={classes.logo}>\r\n        <NavLink to=\"/QuotesProject/quotes\"  >Great Quotes</NavLink>\r\n      </div>\r\n      <nav className={classes.nav}>\r\n        <ul>\r\n          <li>\r\n            <NavLink\r\n              to=\"/QuotesProject/quotes\"\r\n              className={(navData) => (navData.isActive ? classes.active : \"\")}\r\n            >\r\n              All Quotes\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to=\"/QuotesProject/new-quote\"\r\n              className={(navData) => (navData.isActive ? classes.active : \"\")}\r\n            >\r\n              Add a Quote\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default MainNavigation;\r\n","import React, { Fragment } from \"react\";\r\n\r\nimport MainNavigation from \"./MainNavigation\";\r\nimport classes from \"./Layout.module.css\";\r\n\r\nfunction Layout(props) {\r\n  return (\r\n    <Fragment>\r\n      <MainNavigation />\r\n      <main className={classes.main}>{props.children}</main>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import { Routes, Route, Navigate, Link } from \"react-router-dom\";\nimport AllQuotes from \"./pages/AllQuotes\";\nimport QuoteDetail from \"./pages/QuoteDetail\";\nimport NewQuote from \"./pages/NewQuote\";\nimport NotFound from \"./pages/NotFound\";\n\nimport Comments from \"./components/comments/Comments\";\nimport Layout from \"./components/layout/Layout\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Routes>\n        <Route path=\"/QuotesProject/\" element={<Navigate to=\"/QuotesProject/quotes\" />} />\n        <Route path=\"/QuotesProject/quotes\" element={<AllQuotes />} />\n        <Route path=\"/QuotesProject/quotes/:quoteId\" element={<QuoteDetail />}>\n          <Route\n            path=\"\"\n            element={\n              <div className=\"centered\">\n                <Link className=\"btn--flat\" to={`comments`}>\n                  Load Comments\n                </Link>\n              </div>\n            }\n          />\n          <Route path={`comments`} element={<Comments />} />\n        </Route>\n        <Route path=\"/QuotesProject/new-quote\" element={<NewQuote />} />\n        <Route path=\"/QuotesProject/*\" element={<NotFound />} />\n      </Routes>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n"],"sourceRoot":""}